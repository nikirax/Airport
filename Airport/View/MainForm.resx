<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>